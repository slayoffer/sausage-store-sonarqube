stages:
  - build
  - notify
  - test

include:
  - template: Security/SAST.gitlab-ci.yml

build-backend-code-job:
  stage: build  
  rules:
    - changes:
      - backend/*
    - exists:
      - backend/pom.xml
    - if: $CI_COMMIT_MESSAGE =~ /skip tests/
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^hotfix/ && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^dev/
      when: never
    - when: always
  script:
    - cd backend
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository
    - cd ${CI_PROJECT_DIR}
    - mkdir .m2/repository/sausage-store-0.0.1 # создание директории, в которую копируются артефакты. Это нужно для организации удобной структуры архива
    - cp backend/target/sausage-store-0.0.1-SNAPSHOT.jar .m2/repository/sausage-store-0.0.1/sausage-store-0.0.1.jar # копирование собранного бэкенда
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/.m2/repository/sausage-store-0.0.1/sausage-store-0.0.1.jar

build-frontend-code-job:
  stage: build  
  rules:
    - changes:
      - frontend/*
    - if: $CI_COMMIT_MESSAGE =~ /skip tests/
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^hotfix/ && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^dev/
      when: never
    - when: always
  script:
    - cd frontend
    - npm install
    - npm run build
    - cd ${CI_PROJECT_DIR}
    - mkdir .m2 && mkdir .m2/repository && mkdir .m2/repository/sausage-store-0.0.1 # создание директории, в которую копируются артефакты. Это нужно для организации удобной структуры архива
    - cp -r frontend/dist/frontend .m2/repository/sausage-store-0.0.1/public_html # копирование собранного фронтенда
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/.m2/repository/sausage-store-0.0.1/public_html

spotbugs-sast:
  dependencies:
    - build-backend-code-job
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
    MAVEN_CLI_OPTS: "-Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository"
  artifacts:
    reports:
      sast: gl-sast-report.json

sonarqube-backend-sast:
  stage: test
  image: maven:3.8-openjdk-16 # тот самый docker-образ, о котором мы все узнаем в будущем
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_BACK_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_BACK_LOGIN}

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  variables:
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task  
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.qualitygate.wait=true
      -Dsonar.projectName=12_АНТОНЕВСЕЕВ_ФРОНТЕНД
      -Dsonar.projectKey=${SONAR_PROJECT_FRONT_KEY}
      -Dsonar.sources=${SONAR_FRONT_SOURCES}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_FRONT_LOGIN}
  allow_failure: true
  needs:
    - build-frontend-code-job

slack-notification-backend:
  stage: notify
  rules:
    - changes:
      - backend/*
    - if: $CI_COMMIT_MESSAGE =~ /send notification/
  script:
    - 'curl --location --output artifacts.zip -X POST -H "Content-type: application/json" --data ''{"text": "Антон Евсеев: Бэк сосисок собран. Артефакты <https://gitlab.praktikum-services.ru/api/v4/projects/1810/jobs/artifacts/release-0.0.1/download?job=build-backend-code-job&private_token=4zma58VVvXQdh8VzzPxv|здесь>"}'' https://hooks.slack.com/services/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'
  needs:
    - build-backend-code-job

slack-notification-frontend:
  stage: notify
  rules:
    - changes:
      - frontend/*
    - if: $CI_COMMIT_MESSAGE =~ /send notification/
  script:
    - 'curl --location --output artifacts.zip -X POST -H "Content-type: application/json" --data ''{"text": "Антон Евсеев: Фронт сосисок собран. Артефакты <https://gitlab.praktikum-services.ru/api/v4/projects/1810/jobs/artifacts/release-0.0.1/download?job=build-frontend-code-job&private_token=4zma58VVvXQdh8VzzPxv|здесь>"}'' https://hooks.slack.com/services/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'
  needs:
    - build-frontend-code-job